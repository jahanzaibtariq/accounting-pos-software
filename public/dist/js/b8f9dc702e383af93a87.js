(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[136],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.common.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vform__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: ['auth', 'check-permissions'],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('sales.invoices.edit.page_title')\n    };\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: 'sales.invoices.edit.breadcrumbs_current',\n      breadcrumbs: [{\n        name: 'sales.invoices.edit.breadcrumbs_first',\n        url: 'home'\n      }, {\n        name: 'sales.invoices.edit.breadcrumbs_second',\n        url: 'invoices.index'\n      }, {\n        name: 'sales.invoices.edit.breadcrumbs_active',\n        url: ''\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_1___default.a({\n        invoiceNo: '',\n        client: '',\n        reference: '',\n        selectedProducts: [],\n        subTotal: 0,\n        netTotal: 0,\n        discountType: 0,\n        discount: '',\n        discountPercentage: '',\n        totalDiscount: '',\n        transportCost: '',\n        orderTax: '',\n        totalTax: 0,\n        account: '',\n        totalPaid: '',\n        dueAmount: '',\n        clientAdvance: 0,\n        poReference: '',\n        paymentTerms: '',\n        deliveryPlace: '',\n        totalInvoiceReturn: 0,\n        note: '',\n        date: '',\n        status: 1\n      }),\n      products: '',\n      accounts: '',\n      taxes: '',\n      prefix: ''\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])('operations', ['items', 'appInfo'])),\n  created: function created() {\n    this.getClients();\n    this.getTaxes();\n    this.getProducts();\n    this.getInvoice();\n    this.prefix = this.appInfo.productPrefix;\n  },\n  methods: {\n    // get all clients\n    getClients: function getClients() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch('operations/allData', {\n                path: '/api/all-clients'\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    // get taxes\n    getTaxes: function getTaxes() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$_this2$form$ge, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _this2.form.get(window.location.origin + '/api/all-vat-rates');\n            case 2:\n              _yield$_this2$form$ge = _context2.sent;\n              data = _yield$_this2$form$ge.data;\n              _this2.taxes = data.data;\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    // get products\n    getProducts: function getProducts() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$_this3$form$ge, data;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.form.get(window.location.origin + '/api/all-products');\n            case 2:\n              _yield$_this3$form$ge = _context3.sent;\n              data = _yield$_this3$form$ge.data;\n              _this3.products = data.data;\n              _this3.products.sort(_this3.sortProducts);\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    // sort products\n    sortProducts: function sortProducts(a, b) {\n      if (Number(a.code) < Number(b.code)) {\n        return -1;\n      }\n      if (Number(a.code) > Number(b.code)) {\n        return 1;\n      }\n      return 0;\n    },\n    // get the invoice\n    getInvoice: function getInvoice() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        var _yield$_this4$form$ge, data;\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.form.get(window.location.origin + '/api/invoices/' + _this4.$route.params.slug);\n            case 2:\n              _yield$_this4$form$ge = _context4.sent;\n              data = _yield$_this4$form$ge.data;\n              _this4.form.invoiceNo = data.data.invoiceNo;\n              _this4.form.client = data.data.client;\n              _this4.form.reference = data.data.reference;\n              _this4.form.poReference = data.data.poReference;\n              _this4.form.paymentTerms = data.data.paymentTerms;\n              _this4.form.deliveryPlace = data.data.deliveryPlace;\n              _this4.form.date = data.data.invoiceDate;\n              _this4.form.note = data.data.note;\n              _this4.form.status = data.data.status;\n              _this4.form.transportCost = data.data.transport;\n              _this4.form.totalDiscount = data.data.discount;\n              _this4.form.discount = data.data.discountType == 0 ? data.data.discount : data.data.discountPercentage;\n              _this4.form.discountPercentage = data.data.discountPercentage;\n              _this4.form.discountType = data.data.discountType;\n              _this4.form.totalTax = data.data.tax;\n              _this4.form.orderTax = data.data.taxRate;\n              _this4.form.netTotal = Number(data.data.invoiceTotal);\n              _this4.form.subTotal = Number(data.data.subTotal);\n              _this4.form.totalPaid = Number(data.data.totalPaid);\n              _this4.form.dueAmount = Number(data.data.due);\n              _this4.form.totalInvoiceReturn = Number(data.data.totalInvoiceReturn);\n              _this4.form.selectedProducts = _this4.assignProducts(data.data.invoiceProducts);\n            case 26:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    },\n    // store item in array\n    storeProduct: function storeProduct(product) {\n      var index = this.form.selectedProducts.findIndex(function (x) {\n        return x.id == product.id;\n      });\n      var qunatity = 1;\n      if (index === -1) {\n        var productTax = product.taxType == 'Exclusive' ? product.priceWithDiscount * (product.taxRate / 100) : product.priceWithDiscount - product.priceWithDiscount / (1 + product.taxRate / 100);\n        var totalTax = productTax * qunatity;\n        this.form.selectedProducts.unshift({\n          id: product.id,\n          slug: product.slug,\n          name: product.name,\n          code: product.code,\n          taxType: product.taxType,\n          taxRate: product.taxRate,\n          qty: qunatity,\n          oldQty: 0,\n          inventoryCount: product.inventoryCount,\n          avgPurchasePrice: product.avgPurchasePrice,\n          unitPrice: product.priceWithDiscount,\n          unitCost: product.taxType == 'Exclusive' ? product.priceWithDiscount + productTax : product.priceWithDiscount,\n          totalPrice: product.taxType == 'Exclusive' ? 1 * (product.priceWithDiscount + totalTax) : 1 * product.priceWithDiscount,\n          productTax: product.productTax > 0 ? product.productTax : 0,\n          totalTax: totalTax,\n          minQty: 1\n        });\n      }\n      this.generateItemTotal(qunatity, 'qty', index, '');\n      return;\n    },\n    // update array\n    generateItemTotal: function generateItemTotal(value, type, index, action) {\n      var item = this.form.selectedProducts[index];\n      if (item) {\n        if (type == 'qty') {\n          item.qty = value;\n          if (action == 'increment') {\n            item.qty = Number(item.qty) + 1;\n          } else if (action == 'decrement') {\n            if (item.qty > 0) {\n              item.qty = Number(item.qty) - 1;\n            }\n          }\n        } else {\n          item.unitPrice = value;\n          if (action == 'increment') {\n            item.unitPrice = Number(item.unitPrice) + 1;\n          } else if (action == 'decrement') {\n            if (item.unitPrice > 0) {\n              item.unitPrice = Number(item.unitPrice) - 1;\n            }\n          }\n        }\n        item.productTax = item.taxType == 'Exclusive' ? item.unitPrice * (item.taxRate / 100) : item.unitPrice - item.unitPrice / (1 + item.taxRate / 100);\n        item.totalTax = item.productTax * item.qty;\n        item.totalPrice = item.taxType == 'Exclusive' ? item.qty * item.unitPrice + item.totalTax : item.qty * item.unitPrice;\n        item.unitCost = item.taxType == 'Exclusive' ? Number(item.unitPrice) + Number(item.productTax) : item.unitPrice;\n        this.form.selectedProducts[index] = item;\n      }\n      this.calculateSum();\n      return;\n    },\n    // remove item from array\n    removeItem: function removeItem(item) {\n      var index = this.form.selectedProducts.indexOf(item);\n      if (index > -1) {\n        this.form.selectedProducts.splice(index, 1);\n      }\n      this.calculateSum();\n      return;\n    },\n    // calculate sum\n    calculateSum: function calculateSum() {\n      // calculate subtotal\n      this.form.subTotal = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalPrice).toFixed(2));\n      }, 0);\n\n      // calculate product tax\n      this.form.productTotalTax = this.form.selectedProducts.reduce(function (prev, cur) {\n        return Number((prev + cur.totalTax).toFixed(2));\n      }, 0);\n      this.form.netTotal = this.form.subTotal;\n\n      // calculate quatation tax\n      this.form.totalTax = 0;\n      if (this.form.orderTax) {\n        this.form.totalTax = this.form.orderTax.rate / 100 * this.form.subTotal;\n      }\n\n      // calculate discount and total\n      if (this.form.subTotal > 0) {\n        var discount = Number(this.form.discount);\n        if (this.form.discountType == 1) {\n          discount = discount / 100 * this.form.subTotal;\n          this.form.totalDiscount = Number(discount.toFixed(2));\n        } else {\n          discount = Number(this.form.discount);\n        }\n        this.form.netTotal = this.form.subTotal + Number(this.form.transportCost) - discount + this.form.totalTax;\n      }\n\n      // calculate due\n      var paid = Number(this.form.totalPaid);\n      if (paid <= this.form.netTotal) {\n        this.form.dueAmount = (this.form.netTotal - paid).toFixed(2);\n        this.form.clientAdvance = 0;\n      } else {\n        this.form.clientAdvance = paid - this.form.netTotal;\n        this.form.dueAmount = 0;\n      }\n      return;\n    },\n    // get order products\n    assignProducts: function assignProducts(products) {\n      this.form.selectedProducts = [];\n      for (var key in products) {\n        var invoiceItem = products[key];\n        this.form.selectedProducts.unshift({\n          id: invoiceItem.productID,\n          slug: invoiceItem.productSlug,\n          name: invoiceItem.productName,\n          code: invoiceItem.productCode,\n          taxType: invoiceItem.taxType,\n          taxRate: invoiceItem.taxRate,\n          oldQty: invoiceItem.quantity,\n          qty: invoiceItem.quantity,\n          returnQty: invoiceItem.returnQty,\n          inventoryCount: invoiceItem.inventoryCount,\n          avgPurchasePrice: invoiceItem.purchasePrice,\n          unitPrice: invoiceItem.salePrice,\n          unitCost: invoiceItem.unitCost,\n          totalPrice: invoiceItem.unitCostTotal,\n          productTax: invoiceItem.unitTax,\n          totalTax: invoiceItem.taxTotal,\n          minQty: invoiceItem.returnQty\n        });\n      }\n      this.calculateSum();\n      return this.form.selectedProducts;\n    },\n    // update invoice\n    updateInvoice: function updateInvoice() {\n      var _this5 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee5() {\n        return _regeneratorRuntime().wrap(function _callee5$(_context5) {\n          while (1) switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _this5.form.patch(window.location.origin + '/api/invoices/' + _this5.$route.params.slug).then(function (_ref) {\n                var data = _ref.data;\n                toast.fire({\n                  type: 'success',\n                  title: _this5.$t('sales.invoices.edit.success_msg')\n                });\n                _this5.$router.push({\n                  name: 'invoices.show',\n                  params: {\n                    slug: data.data.slug\n                  }\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: 'error',\n                  title: _this5.$t('common.error_msg')\n                });\n              });\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }, _callee5);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&":
/*!***********************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true& ***!
  \***********************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12 col-xl-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.$t(\"sales.invoices.edit.form_title\")) + \"\\n          \")]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"invoices.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.updateInvoice.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.client\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"client\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"client\",\n      placeholder: _vm.$t(\"common.client_placeholder\")\n    },\n    model: {\n      value: _vm.form.client,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"client\", $$v);\n      },\n      expression: \"form.client\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"client\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"reference\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.reference\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.reference,\n      expression: \"form.reference\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"reference\")\n    },\n    attrs: {\n      id: \"reference\",\n      type: \"text\",\n      name: \"reference\",\n      placeholder: _vm.$t(\"common.reference_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.reference\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"reference\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"reference\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.products ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"product\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.select_products\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"selectedProducts\")\n    },\n    attrs: {\n      options: _vm.products,\n      label: \"label\",\n      name: \"product\",\n      placeholder: _vm.$t(\"common.select_products_placeholder\")\n    },\n    on: {\n      input: function input($event) {\n        return _vm.storeProduct(_vm.form.product);\n      }\n    },\n    model: {\n      value: _vm.form.product,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"product\", $$v);\n      },\n      expression: \"form.product\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"selectedProducts\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.form.selectedProducts && _vm.form.selectedProducts.length > 0 ? _c(\"div\", {\n    staticClass: \"row mt-3 mb-4\"\n  }, [_c(\"div\", {\n    staticClass: \"table-responsive table-custom w-95 m-auto\"\n  }, [_c(\"table\", {\n    staticClass: \"table table-hover table-sm text-center\"\n  }, [_c(\"thead\", [_c(\"tr\", [_c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.s_no\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.code\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.product_name\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.invoice_qty\")))]), _vm._v(\" \"), _vm.form.totalInvoiceReturn > 0 ? _c(\"th\", [_vm._v(\"\\n                        \" + _vm._s(_vm.$t(\"common.return_qty\")) + \"\\n                      \")]) : _vm._e(), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.price\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.unit_price\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.tax\")))]), _vm._v(\" \"), _c(\"th\", [_vm._v(_vm._s(_vm.$t(\"common.subtotal\")))]), _vm._v(\" \"), _c(\"th\", {\n    staticClass: \"text-right\"\n  }, [_vm._v(_vm._s(_vm.$t(\"common.action\")))])])]), _vm._v(\" \"), _c(\"tbody\", [_vm._l(_vm.form.selectedProducts, function (item, i) {\n    return _c(\"tr\", {\n      key: i\n    }, [_c(\"td\", [_vm._v(_vm._s(++i))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withPrefix\")(item.code, _vm.prefix)))]), _vm._v(\" \"), _c(\"td\", [Number(item.inventoryCount) < Number(item.qty) ? _c(\"span\", {\n      directives: [{\n        name: \"tooltip\",\n        rawName: \"v-tooltip\",\n        value: \"Insufficient Stock\",\n        expression: \"'Insufficient Stock'\"\n      }],\n      staticClass: \"badge badge-danger p-2\"\n    }, [_c(\"i\", {\n      staticClass: \"fas fa-exclamation\"\n    })]) : _vm._e(), _vm._v(\" \"), _vm.$can(\"product-view\") ? _c(\"router-link\", {\n      attrs: {\n        to: {\n          name: \"products.show\",\n          params: {\n            slug: item.slug\n          }\n        }\n      }\n    }, [_vm._v(\"\\n                          \" + _vm._s(item.name) + \"\\n                        \")]) : _c(\"span\", [_vm._v(_vm._s(item.name))])], 1), _vm._v(\" \"), _c(\"td\", [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        id: \"Qty-\".concat(i),\n        name: \"quantity\",\n        required: \"\",\n        min: item.minQty,\n        max: item.inventoryCount,\n        placeholder: \"Quantity\"\n      },\n      domProps: {\n        value: item.qty\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"qty\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.qty, \"qty\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _vm.form.totalInvoiceReturn > 0 ? _c(\"td\", [_vm._v(\"\\n                        \" + _vm._s(item.returnQty) + \"\\n                      \")]) : _vm._e(), _vm._v(\" \"), _c(\"td\", {\n      staticClass: \"text-center\"\n    }, [_c(\"div\", {\n      staticClass: \"input-group custom-qty-input\"\n    }, [_c(\"input\", {\n      staticClass: \"button-minus icon-shape icon-sm btn-danger\",\n      attrs: {\n        type: \"button\",\n        value: \"-\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"decrement\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"quantity-field border-0 incrementor\",\n      attrs: {\n        type: \"number\",\n        step: \"1\",\n        id: \"unitPrice-\".concat(i),\n        name: \"unitPrice\",\n        required: \"\",\n        min: \"1\"\n      },\n      domProps: {\n        value: item.unitPrice\n      },\n      on: {\n        change: function change($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        },\n        keyup: function keyup($event) {\n          return _vm.generateItemTotal($event.target.value, \"price\", i - 1, \"\");\n        }\n      }\n    }), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"button-plus icon-shape icon-sm btn-primary\",\n      attrs: {\n        type: \"button\",\n        value: \"+\",\n        \"data-field\": \"quantity\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.generateItemTotal(item.unitPrice, \"price\", i - 1, \"increment\");\n        }\n      }\n    })])]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.unitCost)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalTax)))]), _vm._v(\" \"), _c(\"td\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(item.totalPrice)))]), _vm._v(\" \"), _c(\"td\", {\n      staticClass: \"text-right\"\n    }, [_c(\"button\", {\n      staticClass: \"btn btn-danger\",\n      attrs: {\n        type: \"button\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.removeItem(item);\n        }\n      }\n    }, [_c(\"i\", {\n      staticClass: \"fas fa-times\"\n    })])])]);\n  }), _vm._v(\" \"), _vm.form.subTotal ? _c(\"tr\", [_c(\"td\", {\n    staticClass: \"text-right\",\n    attrs: {\n      colspan: _vm.form.totalInvoiceReturn > 0 ? 7 : 6\n    }\n  }, [_c(\"strong\", [_vm._v(_vm._s(_vm.$t(\"common.subtotal\")))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.productTotalTax)))])]), _vm._v(\" \"), _c(\"td\", [_c(\"strong\", [_vm._v(_vm._s(_vm._f(\"withCurrency\")(_vm.form.subTotal)))])]), _vm._v(\" \"), _c(\"td\")]) : _vm._e()], 2)])])]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discountType\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.discount_type\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discountType,\n      expression: \"form.discountType\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discountType\")\n    },\n    attrs: {\n      id: \"discountType\",\n      step: \"any\",\n      name: \"discountType\"\n    },\n    on: {\n      change: [function ($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"discountType\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }, _vm.calculateSum],\n      keyup: _vm.calculateSum\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.fixed\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.percentage\")) + \"(%)\")])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discountType\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\",\n    \"class\": _vm.form.discountType == 1 ? \"col-md-2\" : \"col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"discount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.discount\")) + \"\\n                  \"), _vm.form.discountType == 1 ? _c(\"span\", [_vm._v(\"(%)\")]) : _vm._e()]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.discount,\n      expression: \"form.discount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"discount\")\n    },\n    attrs: {\n      id: \"discount\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      max: _vm.form.discountType == 1 ? 100 : _vm.form.subTotal,\n      name: \"discount\",\n      placeholder: _vm.$t(\"common.discount_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.discount\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"discount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"discount\"\n    }\n  })], 1), _vm._v(\" \"), _vm.form.discountType == 1 ? _c(\"div\", {\n    staticClass: \"form-group col-md-2\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalDiscount\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.total_discount\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalDiscount,\n      expression: \"form.totalDiscount\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalDiscount\")\n    },\n    attrs: {\n      id: \"totalDiscount\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalDiscount\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalDiscount\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalDiscount\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalDiscount\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"transportCost\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.transport_cost\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.transportCost,\n      expression: \"form.transportCost\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"transportCost\")\n    },\n    attrs: {\n      id: \"transportCost\",\n      type: \"number\",\n      step: \"any\",\n      min: \"1\",\n      name: \"transportCost\",\n      placeholder: _vm.$t(\"common.transport_cost_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.transportCost\n    },\n    on: {\n      change: _vm.calculateSum,\n      keyup: _vm.calculateSum,\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"transportCost\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"transportCost\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"orderTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.invoice_tax\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"orderTax\")\n    },\n    attrs: {\n      options: _vm.taxes,\n      label: \"code\",\n      name: \"orderTax\",\n      placeholder: _vm.$t(\"common.invoice_tax_placeholder\")\n    },\n    on: {\n      input: _vm.calculateSum\n    },\n    model: {\n      value: _vm.form.orderTax,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"orderTax\", $$v);\n      },\n      expression: \"form.orderTax\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"orderTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.taxes ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalTax\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.total_tax\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalTax,\n      expression: \"form.totalTax\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"totalTax\")\n    },\n    attrs: {\n      id: \"totalTax\",\n      type: \"text\",\n      name: \"totalTax\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalTax\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalTax\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"totalTax\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _vm.form.totalInvoiceReturn ? _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalInvoiceReturn\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.return_cost\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalInvoiceReturn,\n      expression: \"form.totalInvoiceReturn\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"purchaseReturn\")\n    },\n    attrs: {\n      id: \"totalInvoiceReturn\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalInvoiceReturn\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalInvoiceReturn\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalInvoiceReturn\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"purchaseReturn\"\n    }\n  })], 1) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\",\n    \"class\": _vm.form.totalInvoiceReturn ? \"col-lg-3\" : \"col-lg-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"netTotal\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.net_total\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.netTotal,\n      expression: \"form.netTotal\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"netTotal\")\n    },\n    attrs: {\n      id: \"netTotal\",\n      type: \"text\",\n      name: \"netTotal\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.netTotal\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"netTotal\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"netTotal\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"poReference\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.po_reference\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.poReference,\n      expression: \"form.poReference\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"poReference\")\n    },\n    attrs: {\n      id: \"poReference\",\n      type: \"text\",\n      step: \"any\",\n      name: \"poReference\",\n      placeholder: _vm.$t(\"common.po_reference_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.poReference\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"poReference\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"poReference\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"paymentTerms\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.payment_terms\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.paymentTerms,\n      expression: \"form.paymentTerms\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"paymentTerms\")\n    },\n    attrs: {\n      id: \"paymentTerms\",\n      type: \"text\",\n      name: \"paymentTerms\",\n      placeholder: _vm.$t(\"common.payment_terms_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.paymentTerms\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"paymentTerms\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"paymentTerms\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"deliveryPlace\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"sales.common.delivery_place\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.deliveryPlace,\n      expression: \"form.deliveryPlace\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"deliveryPlace\")\n    },\n    attrs: {\n      id: \"deliveryPlace\",\n      type: \"text\",\n      name: \"deliveryPlace\",\n      placeholder: _vm.$t(\"sales.common.delivery_place_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.deliveryPlace\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"deliveryPlace\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"deliveryPlace\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"common.note_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"date\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.date\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.date,\n      expression: \"form.date\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"date\")\n    },\n    attrs: {\n      id: \"date\",\n      type: \"date\",\n      name: \"date\"\n    },\n    domProps: {\n      value: _vm.form.date\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"date\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"date\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.in_active\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1)])]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-edit\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.save_changes\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue":
/*!****************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./edit.vue?vue&type=template&id=66516df7&scoped=true& */ \"./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&\");\n/* harmony import */ var _edit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./edit.vue?vue&type=script&lang=js& */ \"./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _edit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"66516df7\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/sales/invoices/edit.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/OTM4OSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUErRjtBQUN2QztBQUNMOzs7QUFHbkQ7QUFDbUc7QUFDbkcsZ0JBQWdCLDJHQUFVO0FBQzFCLEVBQUUsMEVBQU07QUFDUixFQUFFLDJGQUFNO0FBQ1IsRUFBRSxvR0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy9zYWxlcy9pbnZvaWNlcy9lZGl0LnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY1MTZkZjcmc2NvcGVkPXRydWUmXCJcbmltcG9ydCBzY3JpcHQgZnJvbSBcIi4vZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL2VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCI2NjUxNmRmN1wiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkY6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxhc2lmXFxcXGFjY291bnRpbmctcG9zLXNvZnR3YXJlXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzY2NTE2ZGY3JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzY2NTE2ZGY3JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzY2NTE2ZGY3JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NjUxNmRmNyZzY29wZWQ9dHJ1ZSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc2NjUxNmRmNycsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2pzL3BhZ2VzL3NhbGVzL2ludm9pY2VzL2VkaXQudnVlXCJcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudC5leHBvcnRzIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&":
/*!*****************************************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/NThjNyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsd0NBQWdNLENBQWdCLGdQQUFHLEVBQUMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIjsgZXhwb3J0IGRlZmF1bHQgbW9kOyBleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&":
/*!***********************************************************************************************!*\
  !*** ./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true& ***!
  \***********************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../node_modules/vue-loader/lib??vue-loader-options!./edit.vue?vue&type=template&id=66516df7&scoped=true& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_edit_vue_vue_type_template_id_66516df7_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/OGMxMCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvc2FsZXMvaW52b2ljZXMvZWRpdC52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9NjY1MTZkZjcmc2NvcGVkPXRydWUmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTYhLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9lZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD02NjUxNmRmNyZzY29wZWQ9dHJ1ZSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/pages/sales/invoices/edit.vue?vue&type=template&id=66516df7&scoped=true&\n");

/***/ })

}]);