(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[105],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js& ***!
  \*************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var vuex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vuex */ \"./node_modules/vuex/dist/vuex.esm.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! vform */ \"./node_modules/vform/dist/vform.common.js\");\n/* harmony import */ var vform__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(vform__WEBPACK_IMPORTED_MODULE_1__);\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, \"catch\": function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  middleware: ['auth', 'check-permissions'],\n  metaInfo: function metaInfo() {\n    return {\n      title: this.$t('payments.clients.invoice.create.page_title')\n    };\n  },\n  data: function data() {\n    return {\n      breadcrumbsCurrent: 'payments.clients.invoice.create.breadcrumbs_current',\n      breadcrumbs: [{\n        name: 'payments.clients.invoice.create.breadcrumbs_first',\n        url: 'home'\n      }, {\n        name: 'payments.clients.invoice.create.breadcrumbs_second',\n        url: ''\n      }, {\n        name: 'payments.clients.invoice.create.breadcrumbs_third',\n        url: 'invoicePayments.index'\n      }, {\n        name: 'payments.clients.invoice.create.breadcrumbs_active',\n        url: ''\n      }],\n      form: new vform__WEBPACK_IMPORTED_MODULE_1___default.a({\n        client: '',\n        selectedInvoices: [],\n        totalPayment: 0,\n        paymentDate: new Date().toISOString().slice(0, 10),\n        note: '',\n        status: 1,\n        account: '',\n        chequeNo: '',\n        receiptNo: ''\n      }),\n      accounts: '',\n      invoices: ''\n    };\n  },\n  computed: _objectSpread({}, Object(vuex__WEBPACK_IMPORTED_MODULE_0__[\"mapGetters\"])('operations', ['items', 'appInfo'])),\n  created: function created() {\n    this.getClients();\n    this.getAccounts();\n  },\n  methods: {\n    // get all clients\n    getClients: function getClients() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _this.$store.dispatch('operations/allData', {\n                path: '/api/all-clients'\n              });\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }))();\n    },\n    // get invoices\n    getInnvoices: function getInnvoices() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var _yield$_this2$form$ge, data;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.form.selectedInvoices = [];\n              if (!_this2.form.client) {\n                _context2.next = 9;\n                break;\n              }\n              _this2.form.clientBalance = _this2.form.client.clientTotalAdvance;\n              _context2.next = 5;\n              return _this2.form.get(window.location.origin + '/api/client/' + _this2.form.client.slug + '/invoices');\n            case 5:\n              _yield$_this2$form$ge = _context2.sent;\n              data = _yield$_this2$form$ge.data;\n              _this2.invoices = data.invoices;\n              _this2.form.client = data.client;\n            case 9:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    // get accounts\n    getAccounts: function getAccounts() {\n      var _this3 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3() {\n        var _yield$_this3$form$ge, data, defaultAccountSlug;\n        return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _this3.form.get(window.location.origin + '/api/all-accounts');\n            case 2:\n              _yield$_this3$form$ge = _context3.sent;\n              data = _yield$_this3$form$ge.data;\n              _this3.accounts = data.data;\n\n              // assign default account\n              if (_this3.accounts && _this3.accounts.length > 0) {\n                defaultAccountSlug = _this3.appInfo.defaultAccountSlug;\n                _this3.form.account = _this3.accounts.find(function (account) {\n                  return account.slug == defaultAccountSlug;\n                });\n              }\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }))();\n    },\n    // store item in array\n    storeInvoice: function storeInvoice(invoice) {\n      var index = this.form.selectedInvoices.findIndex(function (x) {\n        return x.id == invoice.id;\n      });\n      if (index === -1) {\n        // store product\n        this.form.selectedInvoices.push({\n          id: invoice.id,\n          slug: invoice.slug,\n          invoiceNo: invoice.label,\n          invoiceTotal: invoice.invoiceTotal,\n          newDue: invoice.due,\n          originalDue: invoice.due,\n          maxAmount: invoice.due,\n          paidAmount: 1,\n          note: ''\n        });\n      }\n      return;\n    },\n    // update array\n    updateArray: function updateArray(value, index) {\n      var invocie = this.form.selectedInvoices[index];\n      if (invocie && value <= invocie.maxAmount) {\n        this.form.selectedInvoices[index].paidAmount = Number(value);\n        invocie.newDue = Number((invocie.originalDue - invocie.paidAmount).toFixed(2));\n      }\n      this.form.selectedInvoices[index] = invocie;\n      this.calculateTotal();\n      return;\n    },\n    // remove item from array\n    removeItem: function removeItem(item) {\n      var index = this.form.selectedInvoices.indexOf(item);\n      if (index > -1) {\n        this.form.selectedInvoices.splice(index, 1);\n      }\n      this.calculateTotal();\n      this.form.invoice = '';\n      return;\n    },\n    // calculate total\n    calculateTotal: function calculateTotal() {\n      this.form.totalPayment = this.form.selectedInvoices.reduce(function (prev, cur) {\n        return prev + cur.paidAmount;\n      }, 0);\n      return;\n    },\n    // save payment\n    savePayment: function savePayment() {\n      var _this4 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee4() {\n        return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.next = 2;\n              return _this4.form.post(window.location.origin + '/api/payments/invoice').then(function (_ref) {\n                var data = _ref.data;\n                toast.fire({\n                  type: 'success',\n                  title: _this4.$t('payments.clients.invoice.create.success_msg')\n                });\n                _this4.$router.push({\n                  name: 'invoicePayments.show',\n                  params: {\n                    slug: data.data.slug\n                  }\n                });\n              })[\"catch\"](function () {\n                toast.fire({\n                  type: 'error',\n                  title: _this4.$t('common.error_msg')\n                });\n              });\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, _callee4);\n      }))();\n    }\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&":
/*!***********************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true& ***!
  \***********************************************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function render() {\n  var _vm = this,\n    _c = _vm._self._c;\n  return _c(\"div\", [_c(\"breadcrumbs\", {\n    attrs: {\n      items: _vm.breadcrumbs,\n      current: _vm.breadcrumbsCurrent\n    }\n  }), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"col-lg-12 col-xl-12\"\n  }, [_c(\"div\", {\n    staticClass: \"card\"\n  }, [_c(\"div\", {\n    staticClass: \"card-header\"\n  }, [_c(\"h3\", {\n    staticClass: \"card-title\"\n  }, [_vm._v(\"\\n            \" + _vm._s(_vm.$t(\"payments.clients.invoice.create.form_title\")) + \"\\n          \")]), _vm._v(\" \"), _c(\"router-link\", {\n    staticClass: \"btn btn-dark float-right\",\n    attrs: {\n      to: {\n        name: \"invoicePayments.index\"\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-long-arrow-alt-left\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.back\")) + \"\\n          \")])], 1), _vm._v(\" \"), _c(\"form\", {\n    attrs: {\n      role: \"form\"\n    },\n    on: {\n      submit: function submit($event) {\n        $event.preventDefault();\n        return _vm.savePayment.apply(null, arguments);\n      },\n      keydown: function keydown($event) {\n        return _vm.form.onKeydown($event);\n      }\n    }\n  }, [_c(\"div\", {\n    staticClass: \"card-body\"\n  }, [_vm.items ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"client\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.client\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"client\")\n    },\n    attrs: {\n      options: _vm.items,\n      label: \"name\",\n      name: \"client\",\n      placeholder: _vm.$t(\"common.client_placeholder\")\n    },\n    on: {\n      input: _vm.getInnvoices\n    },\n    model: {\n      value: _vm.form.client,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"client\", $$v);\n      },\n      expression: \"form.client\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"client\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.form.client ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"clientInvoiceTotal\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.invoice_total\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.client.clientInvoiceTotal,\n      expression: \"form.client.clientInvoiceTotal\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      id: \"clientInvoiceTotal\",\n      type: \"text\",\n      name: \"clientInvoiceTotal\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.client.clientInvoiceTotal\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form.client, \"clientInvoiceTotal\", $event.target.value);\n      }\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"clientTotalPaid\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.total_paid\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.client.clientTotalPaid,\n      expression: \"form.client.clientTotalPaid\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      id: \"clientTotalPaid\",\n      type: \"text\",\n      name: \"clientTotalPaid\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.client.clientTotalPaid\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form.client, \"clientTotalPaid\", $event.target.value);\n      }\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-4\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"clientDue\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.total_due\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.client.clientDue,\n      expression: \"form.client.clientDue\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      id: \"clientDue\",\n      type: \"text\",\n      name: \"clientDue\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.client.clientDue\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form.client, \"clientDue\", $event.target.value);\n      }\n    }\n  })])]) : _vm._e(), _vm._v(\" \"), _vm.form.client && _vm.invoices ? _c(\"div\", {\n    staticClass: \"row mb-3\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-12\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"invoice\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"payments.common.select_invoice\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"invoice\")\n    },\n    attrs: {\n      options: _vm.invoices,\n      label: \"label\",\n      name: \"invoice\",\n      placeholder: _vm.$t(\"payments.common.select_invoice_placeholder\")\n    },\n    on: {\n      input: function input($event) {\n        return _vm.storeInvoice(_vm.form.invoice);\n      }\n    },\n    model: {\n      value: _vm.form.invoice,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"invoice\", $$v);\n      },\n      expression: \"form.invoice\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"invoice\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _vm.form.errors.errors && _vm.form.errors.errors.selectedInvoices ? _c(\"div\", {\n    staticClass: \"col-md-11 m-auto\"\n  }, _vm._l(_vm.form.errors.errors.selectedInvoices, function (msg, i) {\n    return _c(\"div\", {\n      key: i,\n      staticClass: \"callout callout-danger\"\n    }, [_c(\"p\", [_c(\"i\", {\n      staticClass: \"icon fas fa-ban\"\n    }), _vm._v(\" \" + _vm._s(msg))])]);\n  }), 0) : _vm._e(), _vm._v(\" \"), _vm.form.selectedInvoices ? _c(\"div\", {\n    staticClass: \"col-md-11 m-auto\"\n  }, _vm._l(_vm.form.selectedInvoices, function (item, i) {\n    return _c(\"div\", {\n      key: i,\n      staticClass: \"card bg-light border-dark mb-3\"\n    }, [_c(\"div\", {\n      staticClass: \"card-header\"\n    }, [_vm._v(\"\\n                  \" + _vm._s(item.invoiceNo) + \" \" + _vm._s(_vm.$t(\"common.invoice_details\")) + \"\\n                  \"), _c(\"button\", {\n      staticClass: \"btn btn-danger float-right\",\n      attrs: {\n        type: \"button\"\n      },\n      on: {\n        click: function click($event) {\n          return _vm.removeItem(item);\n        }\n      }\n    }, [_c(\"i\", {\n      staticClass: \"fas fa-times\"\n    })])]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"card-body\"\n    }, [_c(\"div\", {\n      staticClass: \"row\"\n    }, [_c(\"div\", {\n      staticClass: \"form-group col-md-3\"\n    }, [_c(\"label\", {\n      attrs: {\n        \"for\": \"invoiceNumber\"\n      }\n    }, [_vm._v(_vm._s(_vm.$t(\"common.invoice_no\")))]), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"form-control\",\n      attrs: {\n        type: \"text\",\n        id: \"invoiceNumber-\".concat(++i),\n        readonly: \"\"\n      },\n      domProps: {\n        value: item.invoiceNo\n      }\n    })]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"form-group col-md-3\"\n    }, [_c(\"label\", {\n      attrs: {\n        \"for\": \"invoiceTotal\"\n      }\n    }, [_vm._v(_vm._s(_vm.$t(\"common.invoice_total\")))]), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"form-control\",\n      attrs: {\n        type: \"text\",\n        id: \"invoiceTotal-\".concat(i),\n        readonly: \"\"\n      },\n      domProps: {\n        value: item.invoiceTotal\n      }\n    })]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"form-group col-md-3\"\n    }, [_c(\"label\", {\n      attrs: {\n        \"for\": \"invoiceDue\"\n      }\n    }, [_vm._v(_vm._s(_vm.$t(\"common.invoice_due\")))]), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"form-control\",\n      attrs: {\n        type: \"text\",\n        id: \"invoiceDue-\".concat(i),\n        readonly: \"\"\n      },\n      domProps: {\n        value: item.newDue\n      }\n    })]), _vm._v(\" \"), _c(\"div\", {\n      staticClass: \"form-group col-md-3\"\n    }, [_c(\"label\", {\n      attrs: {\n        \"for\": \"paidAmount\"\n      }\n    }, [_vm._v(_vm._s(_vm.$t(\"common.paid_amount\")))]), _vm._v(\" \"), _c(\"input\", {\n      staticClass: \"form-control\",\n      attrs: {\n        type: \"number\",\n        step: \"any\",\n        id: \"paidAmount-\".concat(i),\n        placeholder: _vm.$t(\"common.paid_amount_placeholder\"),\n        required: \"\",\n        min: \"1\",\n        max: item.originalDue,\n        value: \"1\"\n      },\n      on: {\n        change: function change($event) {\n          return _vm.updateArray($event.target.value, i - 1);\n        },\n        keyup: function keyup($event) {\n          return _vm.updateArray($event.target.value, \"paidAmount\", i - 1);\n        }\n      }\n    })])])])]);\n  }), 0) : _vm._e(), _vm._v(\" \"), _vm.accounts ? _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"totalPayment\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"payments.common.total_payment\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.totalPayment,\n      expression: \"form.totalPayment\"\n    }],\n    staticClass: \"form-control\",\n    attrs: {\n      id: \"totalPayment\",\n      type: \"number\",\n      step: \"any\",\n      name: \"totalPayment\",\n      readonly: \"\"\n    },\n    domProps: {\n      value: _vm.form.totalPayment\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"totalPayment\", $event.target.value);\n      }\n    }\n  })]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-6\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"account\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.account\")) + \"\\n                  \"), _c(\"span\", {\n    staticClass: \"required\"\n  }, [_vm._v(\"*\")])]), _vm._v(\" \"), _c(\"v-select\", {\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"account\")\n    },\n    attrs: {\n      options: _vm.accounts,\n      label: \"label\",\n      name: \"account\",\n      placeholder: _vm.$t(\"common.account_placeholder\")\n    },\n    model: {\n      value: _vm.form.account,\n      callback: function callback($$v) {\n        _vm.$set(_vm.form, \"account\", $$v);\n      },\n      expression: \"form.account\"\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"account\"\n    }\n  })], 1)]) : _vm._e(), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"row\"\n  }, [_c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"chequeNo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.cheque_no\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.chequeNo,\n      expression: \"form.chequeNo\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"chequeNo\")\n    },\n    attrs: {\n      type: \"text\",\n      id: \"chequeNo\",\n      placeholder: _vm.$t(\"common.cheque_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.chequeNo\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"chequeNo\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"chequeNo\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"receiptNo\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.receipt_no\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.receiptNo,\n      expression: \"form.receiptNo\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"receiptNo\")\n    },\n    attrs: {\n      type: \"text\",\n      id: \"receiptNo\",\n      placeholder: _vm.$t(\"common.receipt_no_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.receiptNo\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"receiptNo\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"receiptNo\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"paymentDate\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.payment_date\")))]), _vm._v(\" \"), _c(\"input\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.paymentDate,\n      expression: \"form.paymentDate\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"paymentDate\")\n    },\n    attrs: {\n      id: \"paymentDate\",\n      type: \"date\",\n      name: \"paymentDate\"\n    },\n    domProps: {\n      value: _vm.form.paymentDate\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"paymentDate\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"paymentDate\"\n    }\n  })], 1), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group col-md-3\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"status\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.status\")))]), _vm._v(\" \"), _c(\"select\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.status,\n      expression: \"form.status\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"status\")\n    },\n    attrs: {\n      id: \"status\"\n    },\n    on: {\n      change: function change($event) {\n        var $$selectedVal = Array.prototype.filter.call($event.target.options, function (o) {\n          return o.selected;\n        }).map(function (o) {\n          var val = \"_value\" in o ? o._value : o.value;\n          return val;\n        });\n        _vm.$set(_vm.form, \"status\", $event.target.multiple ? $$selectedVal : $$selectedVal[0]);\n      }\n    }\n  }, [_c(\"option\", {\n    attrs: {\n      value: \"1\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.active\")))]), _vm._v(\" \"), _c(\"option\", {\n    attrs: {\n      value: \"0\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.in_active\")))])]), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"status\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"form-group\"\n  }, [_c(\"label\", {\n    attrs: {\n      \"for\": \"note\"\n    }\n  }, [_vm._v(_vm._s(_vm.$t(\"common.note\")))]), _vm._v(\" \"), _c(\"textarea\", {\n    directives: [{\n      name: \"model\",\n      rawName: \"v-model\",\n      value: _vm.form.note,\n      expression: \"form.note\"\n    }],\n    staticClass: \"form-control\",\n    \"class\": {\n      \"is-invalid\": _vm.form.errors.has(\"note\")\n    },\n    attrs: {\n      id: \"note\",\n      placeholder: _vm.$t(\"common.note_placeholder\")\n    },\n    domProps: {\n      value: _vm.form.note\n    },\n    on: {\n      input: function input($event) {\n        if ($event.target.composing) return;\n        _vm.$set(_vm.form, \"note\", $event.target.value);\n      }\n    }\n  }), _vm._v(\" \"), _c(\"has-error\", {\n    attrs: {\n      form: _vm.form,\n      field: \"note\"\n    }\n  })], 1)]), _vm._v(\" \"), _c(\"div\", {\n    staticClass: \"card-footer\"\n  }, [_c(\"v-button\", {\n    staticClass: \"btn btn-primary\",\n    attrs: {\n      loading: _vm.form.busy\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-save\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.save\")) + \"\\n            \")]), _vm._v(\" \"), _c(\"button\", {\n    staticClass: \"btn btn-secondary float-right\",\n    attrs: {\n      type: \"reset\"\n    },\n    on: {\n      click: function click($event) {\n        return _vm.form.reset();\n      }\n    }\n  }, [_c(\"i\", {\n    staticClass: \"fas fa-power-off\"\n  }), _vm._v(\" \" + _vm._s(_vm.$t(\"common.reset\")) + \"\\n            \")])], 1)])])])])], 1);\n};\nvar staticRenderFns = [];\nrender._withStripped = true;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/YmQ2MiJdLCJuYW1lcyI6WyJyZW5kZXIiLCJfdm0iLCJfYyIsIl9zZWxmIiwiYXR0cnMiLCJpdGVtcyIsImJyZWFkY3J1bWJzIiwiY3VycmVudCIsImJyZWFkY3J1bWJzQ3VycmVudCIsIl92Iiwic3RhdGljQ2xhc3MiLCJfcyIsIiR0IiwidG8iLCJuYW1lIiwicm9sZSIsIm9uIiwic3VibWl0IiwiJGV2ZW50IiwicHJldmVudERlZmF1bHQiLCJzYXZlUGF5bWVudCIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5ZG93biIsImZvcm0iLCJvbktleWRvd24iLCJlcnJvcnMiLCJoYXMiLCJvcHRpb25zIiwibGFiZWwiLCJwbGFjZWhvbGRlciIsImlucHV0IiwiZ2V0SW5udm9pY2VzIiwibW9kZWwiLCJ2YWx1ZSIsImNsaWVudCIsImNhbGxiYWNrIiwiJCR2IiwiJHNldCIsImV4cHJlc3Npb24iLCJmaWVsZCIsIl9lIiwiZGlyZWN0aXZlcyIsInJhd05hbWUiLCJjbGllbnRJbnZvaWNlVG90YWwiLCJpZCIsInR5cGUiLCJyZWFkb25seSIsImRvbVByb3BzIiwidGFyZ2V0IiwiY29tcG9zaW5nIiwiY2xpZW50VG90YWxQYWlkIiwiY2xpZW50RHVlIiwiaW52b2ljZXMiLCJzdG9yZUludm9pY2UiLCJpbnZvaWNlIiwic2VsZWN0ZWRJbnZvaWNlcyIsIl9sIiwibXNnIiwiaSIsImtleSIsIml0ZW0iLCJpbnZvaWNlTm8iLCJjbGljayIsInJlbW92ZUl0ZW0iLCJpbnZvaWNlVG90YWwiLCJuZXdEdWUiLCJzdGVwIiwicmVxdWlyZWQiLCJtaW4iLCJtYXgiLCJvcmlnaW5hbER1ZSIsImNoYW5nZSIsInVwZGF0ZUFycmF5Iiwia2V5dXAiLCJhY2NvdW50cyIsInRvdGFsUGF5bWVudCIsImFjY291bnQiLCJjaGVxdWVObyIsInJlY2VpcHRObyIsInBheW1lbnREYXRlIiwic3RhdHVzIiwiJCRzZWxlY3RlZFZhbCIsIkFycmF5IiwicHJvdG90eXBlIiwiZmlsdGVyIiwiY2FsbCIsIm8iLCJzZWxlY3RlZCIsIm1hcCIsInZhbCIsIl92YWx1ZSIsIm11bHRpcGxlIiwibm90ZSIsImxvYWRpbmciLCJidXN5IiwicmVzZXQiLCJzdGF0aWNSZW5kZXJGbnMiLCJfd2l0aFN0cmlwcGVkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQSxJQUFJQSxNQUFNLEdBQUcsU0FBU0EsTUFBTSxHQUFHO0VBQzdCLElBQUlDLEdBQUcsR0FBRyxJQUFJO0lBQ1pDLEVBQUUsR0FBR0QsR0FBRyxDQUFDRSxLQUFLLENBQUNELEVBQUU7RUFDbkIsT0FBT0EsRUFBRSxDQUNQLEtBQUssRUFDTCxDQUNFQSxFQUFFLENBQUMsYUFBYSxFQUFFO0lBQ2hCRSxLQUFLLEVBQUU7TUFBRUMsS0FBSyxFQUFFSixHQUFHLENBQUNLLFdBQVc7TUFBRUMsT0FBTyxFQUFFTixHQUFHLENBQUNPO0lBQW1CO0VBQ25FLENBQUMsQ0FBQyxFQUNGUCxHQUFHLENBQUNRLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFDWFAsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBTSxDQUFDLEVBQUUsQ0FDaENSLEVBQUUsQ0FBQyxLQUFLLEVBQUU7SUFBRVEsV0FBVyxFQUFFO0VBQXNCLENBQUMsRUFBRSxDQUNoRFIsRUFBRSxDQUFDLEtBQUssRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBTyxDQUFDLEVBQUUsQ0FDakNSLEVBQUUsQ0FDQSxLQUFLLEVBQ0w7SUFBRVEsV0FBVyxFQUFFO0VBQWMsQ0FBQyxFQUM5QixDQUNFUixFQUFFLENBQUMsSUFBSSxFQUFFO0lBQUVRLFdBQVcsRUFBRTtFQUFhLENBQUMsRUFBRSxDQUN0Q1QsR0FBRyxDQUFDUSxFQUFFLENBQ0osZ0JBQWdCLEdBQ2RSLEdBQUcsQ0FBQ1UsRUFBRSxDQUNKVixHQUFHLENBQUNXLEVBQUUsQ0FBQyw0Q0FBNEMsQ0FB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QUNEWCxHQUFHLENBQUNRLEVBQUUsQ0FBQyxHQUFHLENBQUMsRUFDWFAsRUFBRSxDQUNBLFFBQVEsRUFDUjtJQUNFUSxXQUFXLEVBQUUsK0JBQStCO0lBQzVDTixLQUFLLEVBQUU7TUFBRTBDLElBQUksRUFBRTtJQUFRLENBQUM7SUFDeEI5QixFQUFFLEVBQUU7TUFDRitDLEtBQUssRUFBRSxlQUFVN0MsTUFBTSxFQUFFO1FBQ3ZCLE9BQU9qQixHQUFHLENBQUN1QixJQUFJLENBQUN3RSxLQUFLLEVBQUU7TUFDekI7SUFDRjtFQUNGLENBQUMsRUFDRCxDQUNFOUYsRUFBRSxDQUFDLEdBQUcsRUFBRTtJQUFFUSxXQUFXLEVBQUU7RUFBbUIsQ0FBQyxDQUFDLEVBQzVDVCxHQUFHLENBQUNRLEVBQUUsQ0FDSixHQUFHLEdBQ0RSLEdBQUcsQ0FBQ1UsRUFBRSxDQUFDVixHQUFHLENBQUNXLEVBQUUsQ0FBQyxjQUFjLENBQUMsQ0FBQyxHQUM5QixnQkFBZ0IsQ0FDbkIsQ0FDRixDQUNGLENBQ0YsRUFDRCxDQUFDLENBQ0YsQ0FDRixDQUNGLENBQ0YsQ0FBQyxDQUNILENBQUMsQ0FDSCxDQUFDLENBQ0gsRUFDRCxDQUFDLENBQ0Y7QUFDSCxDQUFDO0FBQ0QsSUFBSXFGLGVBQWUsR0FBRyxFQUFFO0FBQ3hCakcsTUFBTSxDQUFDa0csYUFBYSxHQUFHLElBQUkiLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8hLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/IS4vcmVzb3VyY2VzL2pzL3BhZ2VzL3BheW1lbnRzL2NsaWVudHMvaW52b2ljZS9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTBjZGE3MzY0JnNjb3BlZD10cnVlJi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbiByZW5kZXIoKSB7XG4gIHZhciBfdm0gPSB0aGlzLFxuICAgIF9jID0gX3ZtLl9zZWxmLl9jXG4gIHJldHVybiBfYyhcbiAgICBcImRpdlwiLFxuICAgIFtcbiAgICAgIF9jKFwiYnJlYWRjcnVtYnNcIiwge1xuICAgICAgICBhdHRyczogeyBpdGVtczogX3ZtLmJyZWFkY3J1bWJzLCBjdXJyZW50OiBfdm0uYnJlYWRjcnVtYnNDdXJyZW50IH0sXG4gICAgICB9KSxcbiAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sIFtcbiAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJjb2wtbGctMTIgY29sLXhsLTEyXCIgfSwgW1xuICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY2FyZFwiIH0sIFtcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImNhcmQtaGVhZGVyXCIgfSxcbiAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgIF9jKFwiaDNcIiwgeyBzdGF0aWNDbGFzczogXCJjYXJkLXRpdGxlXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHQoXCJwYXltZW50cy5jbGllbnRzLmludm9pY2UuY3JlYXRlLmZvcm1fdGl0bGVcIilcbiAgICAgICAgICAgICAgICAgICAgICApICtcbiAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgXCJyb3V0ZXItbGlua1wiLFxuICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJidG4gYnRuLWRhcmsgZmxvYXQtcmlnaHRcIixcbiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdG86IHsgbmFtZTogXCJpbnZvaWNlUGF5bWVudHMuaW5kZXhcIiB9IH0sXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYXMgZmEtbG9uZy1hcnJvdy1hbHQtbGVmdFwiIH0pLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgXCIgXCIgKyBfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmJhY2tcIikpICsgXCJcXG4gICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAxXG4gICAgICAgICAgICApLFxuICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICBcImZvcm1cIixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGF0dHJzOiB7IHJvbGU6IFwiZm9ybVwiIH0sXG4gICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgIHN1Ym1pdDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnNhdmVQYXltZW50LmFwcGx5KG51bGwsIGFyZ3VtZW50cylcbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBrZXlkb3duOiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZm9ybS5vbktleWRvd24oJGV2ZW50KVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJjYXJkLWJvZHlcIiB9LCBbXG4gICAgICAgICAgICAgICAgICBfdm0uaXRlbXNcbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcInJvd1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTEyXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiY2xpZW50XCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJjb21tb24uY2xpZW50XCIpKSArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJcXG4gICAgICAgICAgICAgICAgICBcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwic3BhblwiLCB7IHN0YXRpY0NsYXNzOiBcInJlcXVpcmVkXCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIqXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInYtc2VsZWN0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiY2xpZW50XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5pdGVtcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFwibmFtZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcImNsaWVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogX3ZtLiR0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY29tbW9uLmNsaWVudF9wbGFjZWhvbGRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHsgaW5wdXQ6IF92bS5nZXRJbm52b2ljZXMgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1vZGVsOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5jbGllbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwiY2xpZW50XCIsICQkdilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmNsaWVudFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJjbGllbnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0uY2xpZW50XG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwibGFiZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IGF0dHJzOiB7IGZvcjogXCJjbGllbnRJbnZvaWNlVG90YWxcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdihfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmludm9pY2VfdG90YWxcIikpKV1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uY2xpZW50LmNsaWVudEludm9pY2VUb3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmNsaWVudC5jbGllbnRJbnZvaWNlVG90YWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwiY2xpZW50SW52b2ljZVRvdGFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiY2xpZW50SW52b2ljZVRvdGFsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uY2xpZW50LmNsaWVudEludm9pY2VUb3RhbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybS5jbGllbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjbGllbnRJbnZvaWNlVG90YWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiY2xpZW50VG90YWxQYWlkXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJjb21tb24udG90YWxfcGFpZFwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uY2xpZW50LmNsaWVudFRvdGFsUGFpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmNsaWVudC5jbGllbnRUb3RhbFBhaWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwiY2xpZW50VG90YWxQYWlkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwiY2xpZW50VG90YWxQYWlkXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uY2xpZW50LmNsaWVudFRvdGFsUGFpZCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoJGV2ZW50LnRhcmdldC5jb21wb3NpbmcpIHJldHVyblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybS5jbGllbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjbGllbnRUb3RhbFBhaWRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiY2xpZW50RHVlXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJjb21tb24udG90YWxfZHVlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5jbGllbnQuY2xpZW50RHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0uY2xpZW50LmNsaWVudER1ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZDogXCJjbGllbnREdWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJjbGllbnREdWVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmNsaWVudC5jbGllbnREdWUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0uY2xpZW50LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY2xpZW50RHVlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfdm0uZm9ybS5jbGllbnQgJiYgX3ZtLmludm9pY2VzXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3cgbWItM1wiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTEyXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiaW52b2ljZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiR0KFwicGF5bWVudHMuY29tbW9uLnNlbGVjdF9pbnZvaWNlXCIpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkgKyBcIlxcbiAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwicmVxdWlyZWRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIipcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidi1zZWxlY3RcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJpbnZvaWNlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5pbnZvaWNlcyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFwibGFiZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJpbnZvaWNlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwYXltZW50cy5jb21tb24uc2VsZWN0X2ludm9pY2VfcGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlucHV0OiBmdW5jdGlvbiAoJGV2ZW50KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5zdG9yZUludm9pY2UoX3ZtLmZvcm0uaW52b2ljZSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtb2RlbDoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0uaW52b2ljZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uICgkJHYpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChfdm0uZm9ybSwgXCJpbnZvaWNlXCIsICQkdilcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLmludm9pY2VcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwiaW52b2ljZVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgXSlcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfdm0uZm9ybS5lcnJvcnMuZXJyb3JzICYmXG4gICAgICAgICAgICAgICAgICBfdm0uZm9ybS5lcnJvcnMuZXJyb3JzLnNlbGVjdGVkSW52b2ljZXNcbiAgICAgICAgICAgICAgICAgICAgPyBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImNvbC1tZC0xMSBtLWF1dG9cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybS5lcnJvcnMuZXJyb3JzLnNlbGVjdGVkSW52b2ljZXMsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGZ1bmN0aW9uIChtc2csIGkpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBrZXk6IGksIHN0YXRpY0NsYXNzOiBcImNhbGxvdXQgY2FsbG91dC1kYW5nZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInBcIiwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaVwiLCB7IHN0YXRpY0NsYXNzOiBcImljb24gZmFzIGZhLWJhblwiIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiArIF92bS5fcyhtc2cpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgMFxuICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgOiBfdm0uX2UoKSxcbiAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICBfdm0uZm9ybS5zZWxlY3RlZEludm9pY2VzXG4gICAgICAgICAgICAgICAgICAgID8gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJjb2wtbWQtMTEgbS1hdXRvXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fbChfdm0uZm9ybS5zZWxlY3RlZEludm9pY2VzLCBmdW5jdGlvbiAoaXRlbSwgaSkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJjYXJkIGJnLWxpZ2h0IGJvcmRlci1kYXJrIG1iLTNcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwiY2FyZC1oZWFkZXJcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgIFwiICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhpdGVtLmludm9pY2VObykgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCIgXCIgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS4kdChcImNvbW1vbi5pbnZvaWNlX2RldGFpbHNcIikpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJidG4gYnRuLWRhbmdlciBmbG9hdC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJidXR0b25cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnJlbW92ZUl0ZW0oaXRlbSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX2MoXCJpXCIsIHsgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLXRpbWVzXCIgfSldXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImRpdlwiLCB7IHN0YXRpY0NsYXNzOiBcImNhcmQtYm9keVwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZm9yOiBcImludm9pY2VOdW1iZXJcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmludm9pY2Vfbm9cIikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGBpbnZvaWNlTnVtYmVyLSR7KytpfWAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBpdGVtLmludm9pY2VObyB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZm9yOiBcImludm9pY2VUb3RhbFwiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHQoXCJjb21tb24uaW52b2ljZV90b3RhbFwiKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGBpbnZvaWNlVG90YWwtJHtpfWAsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBpdGVtLmludm9pY2VUb3RhbCB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJsYWJlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgZm9yOiBcImludm9pY2VEdWVcIiB9IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmludm9pY2VfZHVlXCIpKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBgaW52b2ljZUR1ZS0ke2l9YCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlYWRvbmx5OiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IGl0ZW0ubmV3RHVlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImxhYmVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBmb3I6IFwicGFpZEFtb3VudFwiIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJjb21tb24ucGFpZF9hbW91bnRcIikpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwibnVtYmVyXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGVwOiBcImFueVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IGBwYWlkQW1vdW50LSR7aX1gLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb21tb24ucGFpZF9hbW91bnRfcGxhY2Vob2xkZXJcIlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlcXVpcmVkOiBcIlwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWluOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG1heDogaXRlbS5vcmlnaW5hbER1ZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBcIjFcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjaGFuZ2U6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS51cGRhdGVBcnJheShcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGkgLSAxXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBrZXl1cDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLnVwZGF0ZUFycmF5KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwYWlkQW1vdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaSAtIDFcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICAwXG4gICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICA6IF92bS5fZSgpLFxuICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgIF92bS5hY2NvdW50c1xuICAgICAgICAgICAgICAgICAgICA/IF9jKFwiZGl2XCIsIHsgc3RhdGljQ2xhc3M6IFwicm93XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC02XCIgfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcInRvdGFsUGF5bWVudFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uJHQoXCJwYXltZW50cy5jb21tb24udG90YWxfcGF5bWVudFwiKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcInNwYW5cIiwgeyBzdGF0aWNDbGFzczogXCJyZXF1aXJlZFwiIH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIipcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlucHV0XCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwibW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS50b3RhbFBheW1lbnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS50b3RhbFBheW1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwidG90YWxQYXltZW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlOiBcIm51bWJlclwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3RlcDogXCJhbnlcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWU6IFwidG90YWxQYXltZW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZWFkb25seTogXCJcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS50b3RhbFBheW1lbnQgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJ0b3RhbFBheW1lbnRcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC02XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwiYWNjb3VudFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmFjY291bnRcIikpICtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcIlxcbiAgICAgICAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJzcGFuXCIsIHsgc3RhdGljQ2xhc3M6IFwicmVxdWlyZWRcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIipcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwidi1zZWxlY3RcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJpcy1pbnZhbGlkXCI6IF92bS5mb3JtLmVycm9ycy5oYXMoXCJhY2NvdW50XCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IF92bS5hY2NvdW50cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGFiZWw6IFwibGFiZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJhY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJjb21tb24uYWNjb3VudF9wbGFjZWhvbGRlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLmFjY291bnQsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiAoJCR2KSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwiYWNjb3VudFwiLCAkJHYpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5hY2NvdW50XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcImFjY291bnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAxXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF0pXG4gICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXCJkaXZcIiwgeyBzdGF0aWNDbGFzczogXCJyb3dcIiB9LCBbXG4gICAgICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgICAgeyBzdGF0aWNDbGFzczogXCJmb3JtLWdyb3VwIGNvbC1tZC0zXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcImNoZXF1ZU5vXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLmNoZXF1ZV9ub1wiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpbnB1dFwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lOiBcIm1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5jaGVxdWVObyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5jaGVxdWVOb1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwiY2hlcXVlTm9cIiksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ6IFwiY2hlcXVlTm9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcjogX3ZtLiR0KFwiY29tbW9uLmNoZXF1ZV9wbGFjZWhvbGRlclwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZG9tUHJvcHM6IHsgdmFsdWU6IF92bS5mb3JtLmNoZXF1ZU5vIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiY2hlcXVlTm9cIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImhhcy1lcnJvclwiLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJjaGVxdWVOb1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgICAgICB7IHN0YXRpY0NsYXNzOiBcImZvcm0tZ3JvdXAgY29sLW1kLTNcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwibGFiZWxcIiwgeyBhdHRyczogeyBmb3I6IFwicmVjZWlwdE5vXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLnJlY2VpcHRfbm9cIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0ucmVjZWlwdE5vLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLnJlY2VpcHROb1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiaXMtaW52YWxpZFwiOiBfdm0uZm9ybS5lcnJvcnMuaGFzKFwicmVjZWlwdE5vXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInJlY2VpcHROb1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyOiBfdm0uJHQoXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNvbW1vbi5yZWNlaXB0X25vX3BsYWNlaG9sZGVyXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0ucmVjZWlwdE5vIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIG9uOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaW5wdXQ6IGZ1bmN0aW9uICgkZXZlbnQpIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uJHNldChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmZvcm0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwicmVjZWlwdE5vXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC50YXJnZXQudmFsdWVcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwicmVjZWlwdE5vXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtM1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJwYXltZW50RGF0ZVwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcImNvbW1vbi5wYXltZW50X2RhdGVcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBkaXJlY3RpdmVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmF3TmFtZTogXCJ2LW1vZGVsXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmZvcm0ucGF5bWVudERhdGUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiBcImZvcm0ucGF5bWVudERhdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJmb3JtLWNvbnRyb2xcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M6IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcInBheW1lbnREYXRlXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcInBheW1lbnREYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogXCJkYXRlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJwYXltZW50RGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBkb21Qcm9wczogeyB2YWx1ZTogX3ZtLmZvcm0ucGF5bWVudERhdGUgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCRldmVudC50YXJnZXQuY29tcG9zaW5nKSByZXR1cm5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZm9ybSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgXCJwYXltZW50RGF0ZVwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQudGFyZ2V0LnZhbHVlXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgZm9ybTogX3ZtLmZvcm0sIGZpZWxkOiBcInBheW1lbnREYXRlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcImRpdlwiLFxuICAgICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cCBjb2wtbWQtM1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJsYWJlbFwiLCB7IGF0dHJzOiB7IGZvcjogXCJzdGF0dXNcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJjb21tb24uc3RhdHVzXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihcIiBcIiksXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXCJzZWxlY3RcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGRpcmVjdGl2ZXM6IFtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByYXdOYW1lOiBcInYtbW9kZWxcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5mb3JtLnN0YXR1cyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZXhwcmVzc2lvbjogXCJmb3JtLnN0YXR1c1wiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiBcImZvcm0tY29udHJvbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcInN0YXR1c1wiKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGlkOiBcInN0YXR1c1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNoYW5nZTogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgJCRzZWxlY3RlZFZhbCA9IEFycmF5LnByb3RvdHlwZS5maWx0ZXJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAuY2FsbCgkZXZlbnQudGFyZ2V0Lm9wdGlvbnMsIGZ1bmN0aW9uIChvKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gby5zZWxlY3RlZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLm1hcChmdW5jdGlvbiAobykge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHZhbCA9IFwiX3ZhbHVlXCIgaW4gbyA/IG8uX3ZhbHVlIDogby52YWx1ZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHZhbFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS4kc2V0KFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5mb3JtLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwic3RhdHVzXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnRhcmdldC5tdWx0aXBsZVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPyAkJHNlbGVjdGVkVmFsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6ICQkc2VsZWN0ZWRWYWxbMF1cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJvcHRpb25cIiwgeyBhdHRyczogeyB2YWx1ZTogXCIxXCIgfSB9LCBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoX3ZtLl9zKF92bS4kdChcImNvbW1vbi5hY3RpdmVcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKFwib3B0aW9uXCIsIHsgYXR0cnM6IHsgdmFsdWU6IFwiMFwiIH0gfSwgW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KF92bS5fcyhfdm0uJHQoXCJjb21tb24uaW5fYWN0aXZlXCIpKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJoYXMtZXJyb3JcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBmb3JtOiBfdm0uZm9ybSwgZmllbGQ6IFwic3RhdHVzXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgXSksXG4gICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgIFwiZGl2XCIsXG4gICAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiZm9ybS1ncm91cFwiIH0sXG4gICAgICAgICAgICAgICAgICAgIFtcbiAgICAgICAgICAgICAgICAgICAgICBfYyhcImxhYmVsXCIsIHsgYXR0cnM6IHsgZm9yOiBcIm5vdGVcIiB9IH0sIFtcbiAgICAgICAgICAgICAgICAgICAgICAgIF92bS5fdihfdm0uX3MoX3ZtLiR0KFwiY29tbW9uLm5vdGVcIikpKSxcbiAgICAgICAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFwidGV4dGFyZWFcIiwge1xuICAgICAgICAgICAgICAgICAgICAgICAgZGlyZWN0aXZlczogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZTogXCJtb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJhd05hbWU6IFwidi1tb2RlbFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uZm9ybS5ub3RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246IFwiZm9ybS5ub3RlXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBdLFxuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiZm9ybS1jb250cm9sXCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBjbGFzczogeyBcImlzLWludmFsaWRcIjogX3ZtLmZvcm0uZXJyb3JzLmhhcyhcIm5vdGVcIikgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGlkOiBcIm5vdGVcIixcbiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI6IF92bS4kdChcImNvbW1vbi5ub3RlX3BsYWNlaG9sZGVyXCIpLFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGRvbVByb3BzOiB7IHZhbHVlOiBfdm0uZm9ybS5ub3RlIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpbnB1dDogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlmICgkZXZlbnQudGFyZ2V0LmNvbXBvc2luZykgcmV0dXJuXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLiRzZXQoX3ZtLmZvcm0sIFwibm90ZVwiLCAkZXZlbnQudGFyZ2V0LnZhbHVlKVxuICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgICAgICAgIF9jKFwiaGFzLWVycm9yXCIsIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGZvcm06IF92bS5mb3JtLCBmaWVsZDogXCJub3RlXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgICAgMVxuICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICBdKSxcbiAgICAgICAgICAgICAgICBfdm0uX3YoXCIgXCIpLFxuICAgICAgICAgICAgICAgIF9jKFxuICAgICAgICAgICAgICAgICAgXCJkaXZcIixcbiAgICAgICAgICAgICAgICAgIHsgc3RhdGljQ2xhc3M6IFwiY2FyZC1mb290ZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICBfYyhcbiAgICAgICAgICAgICAgICAgICAgICBcInYtYnV0dG9uXCIsXG4gICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6IFwiYnRuIGJ0bi1wcmltYXJ5XCIsXG4gICAgICAgICAgICAgICAgICAgICAgICBhdHRyczogeyBsb2FkaW5nOiBfdm0uZm9ybS5idXN5IH0sXG4gICAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgICAgICBfYyhcImlcIiwgeyBzdGF0aWNDbGFzczogXCJmYXMgZmEtc2F2ZVwiIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBcIiArIF92bS5fcyhfdm0uJHQoXCJjb21tb24uc2F2ZVwiKSkgKyBcIlxcbiAgICAgICAgICAgIFwiXG4gICAgICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgKSxcbiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFwiIFwiKSxcbiAgICAgICAgICAgICAgICAgICAgX2MoXG4gICAgICAgICAgICAgICAgICAgICAgXCJidXR0b25cIixcbiAgICAgICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogXCJidG4gYnRuLXNlY29uZGFyeSBmbG9hdC1yaWdodFwiLFxuICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgdHlwZTogXCJyZXNldFwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICBvbjoge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBjbGljazogZnVuY3Rpb24gKCRldmVudCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uZm9ybS5yZXNldCgpXG4gICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgW1xuICAgICAgICAgICAgICAgICAgICAgICAgX2MoXCJpXCIsIHsgc3RhdGljQ2xhc3M6IFwiZmFzIGZhLXBvd2VyLW9mZlwiIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KFxuICAgICAgICAgICAgICAgICAgICAgICAgICBcIiBcIiArXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS4kdChcImNvbW1vbi5yZXNldFwiKSkgK1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFwiXFxuICAgICAgICAgICAgXCJcbiAgICAgICAgICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICAgICAgXSxcbiAgICAgICAgICAgICAgICAgIDFcbiAgICAgICAgICAgICAgICApLFxuICAgICAgICAgICAgICBdXG4gICAgICAgICAgICApLFxuICAgICAgICAgIF0pLFxuICAgICAgICBdKSxcbiAgICAgIF0pLFxuICAgIF0sXG4gICAgMVxuICApXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&\n");

/***/ }),

/***/ "./resources/js/pages/payments/clients/invoice/create.vue":
/*!****************************************************************!*\
  !*** ./resources/js/pages/payments/clients/invoice/create.vue ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./create.vue?vue&type=template&id=0cda7364&scoped=true& */ \"./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&\");\n/* harmony import */ var _create_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./create.vue?vue&type=script&lang=js& */ \"./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _create_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  \"0cda7364\",\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/pages/payments/clients/invoice/create.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/NjE4NCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFpRztBQUN2QztBQUNMOzs7QUFHckQ7QUFDc0c7QUFDdEcsZ0JBQWdCLDJHQUFVO0FBQzFCLEVBQUUsNEVBQU07QUFDUixFQUFFLDZGQUFNO0FBQ1IsRUFBRSxzR0FBZTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBLElBQUksS0FBVSxFQUFFLFlBaUJmO0FBQ0Q7QUFDZSxnRiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9wYWdlcy9wYXltZW50cy9jbGllbnRzL2ludm9pY2UvY3JlYXRlLnZ1ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0gZnJvbSBcIi4vY3JlYXRlLnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD0wY2RhNzM2NCZzY29wZWQ9dHJ1ZSZcIlxuaW1wb3J0IHNjcmlwdCBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5leHBvcnQgKiBmcm9tIFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiXG5cblxuLyogbm9ybWFsaXplIGNvbXBvbmVudCAqL1xuaW1wb3J0IG5vcm1hbGl6ZXIgZnJvbSBcIiEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvcnVudGltZS9jb21wb25lbnROb3JtYWxpemVyLmpzXCJcbnZhciBjb21wb25lbnQgPSBub3JtYWxpemVyKFxuICBzY3JpcHQsXG4gIHJlbmRlcixcbiAgc3RhdGljUmVuZGVyRm5zLFxuICBmYWxzZSxcbiAgbnVsbCxcbiAgXCIwY2RhNzM2NFwiLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIkY6XFxcXHhhbXBwXFxcXGh0ZG9jc1xcXFxhc2lmXFxcXGFjY291bnRpbmctcG9zLXNvZnR3YXJlXFxcXG5vZGVfbW9kdWxlc1xcXFx2dWUtaG90LXJlbG9hZC1hcGlcXFxcZGlzdFxcXFxpbmRleC5qc1wiKVxuICBhcGkuaW5zdGFsbChyZXF1aXJlKCd2dWUnKSlcbiAgaWYgKGFwaS5jb21wYXRpYmxlKSB7XG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoKVxuICAgIGlmICghYXBpLmlzUmVjb3JkZWQoJzBjZGE3MzY0JykpIHtcbiAgICAgIGFwaS5jcmVhdGVSZWNvcmQoJzBjZGE3MzY0JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZWxvYWQoJzBjZGE3MzY0JywgY29tcG9uZW50Lm9wdGlvbnMpXG4gICAgfVxuICAgIG1vZHVsZS5ob3QuYWNjZXB0KFwiLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTBjZGE3MzY0JnNjb3BlZD10cnVlJlwiLCBmdW5jdGlvbiAoKSB7XG4gICAgICBhcGkucmVyZW5kZXIoJzBjZGE3MzY0Jywge1xuICAgICAgICByZW5kZXI6IHJlbmRlcixcbiAgICAgICAgc3RhdGljUmVuZGVyRm5zOiBzdGF0aWNSZW5kZXJGbnNcbiAgICAgIH0pXG4gICAgfSlcbiAgfVxufVxuY29tcG9uZW50Lm9wdGlvbnMuX19maWxlID0gXCJyZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWVcIlxuZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50LmV4cG9ydHMiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/payments/clients/invoice/create.vue\n");

/***/ }),

/***/ "./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&":
/*!*****************************************************************************************!*\
  !*** ./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js& ***!
  \*****************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/OTYzNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUEsd0NBQXdNLENBQWdCLGtQQUFHLEVBQUMiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1vZCBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvYmFiZWwtbG9hZGVyL2xpYi9pbmRleC5qcz8/cmVmLS00LTAhLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJlwiOyBleHBvcnQgZGVmYXVsdCBtb2Q7IGV4cG9ydCAqIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL2NyZWF0ZS52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/pages/payments/clients/invoice/create.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&":
/*!***********************************************************************************************************!*\
  !*** ./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true& ***!
  \***********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??ref--6!../../../../../../node_modules/vue-loader/lib??vue-loader-options!./create.vue?vue&type=template&id=0cda7364&scoped=true& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_loaders_templateLoader_js_ref_6_node_modules_vue_loader_lib_index_js_vue_loader_options_create_vue_vue_type_template_id_0cda7364_scoped_true___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/NzFhNiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvcGFnZXMvcGF5bWVudHMvY2xpZW50cy9pbnZvaWNlL2NyZWF0ZS52dWU/dnVlJnR5cGU9dGVtcGxhdGUmaWQ9MGNkYTczNjQmc2NvcGVkPXRydWUmLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPz9yZWYtLTYhLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvbGliL2luZGV4LmpzPz92dWUtbG9hZGVyLW9wdGlvbnMhLi9jcmVhdGUudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPTBjZGE3MzY0JnNjb3BlZD10cnVlJlwiIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/pages/payments/clients/invoice/create.vue?vue&type=template&id=0cda7364&scoped=true&\n");

/***/ })

}]);